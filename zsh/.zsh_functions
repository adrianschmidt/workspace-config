function llClone() {
    cd ~/src/
    repo_name="$1"
    target_folder="${2:-$repo_name}"  # Use the provided folder argument or default to repo_name
    git clone git@github.com:Lundalogik/"$repo_name".git "$target_folder"
    cd "$target_folder"
}

function npmInstallLatestAndCommit() {
    local TYPE="chore"
    local SCOPE="package"

    # Manually parse options without getopt
    while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do case $1 in
        -t | --type)
            TYPE="$2"; shift 2;;
        -s | --scope)
            SCOPE="$2"; shift 2;;
    esac; done
    shift # Move past the last option

    local restArgs=("$@")

    for PACKAGE in "${restArgs[@]}"; do
        local npmOutdatedOutput=$(npm outdated $PACKAGE)

        # Zsh regex matching with capture groups
        local regex='([0-9]+\.[0-9]+\.[0-9]+)'
        local CURRENT WANTED LATEST

        # Match CURRENT version
        [[ $npmOutdatedOutput =~ $regex ]]
        CURRENT=$match[1]

        # Extract and match WANTED version
        local postCurrent=${npmOutdatedOutput#*$CURRENT}
        [[ $postCurrent =~ $regex ]]
        WANTED=$match[1]

        # Extract and match LATEST version
        local postWanted=${postCurrent#*$WANTED}
        [[ $postWanted =~ $regex ]]
        LATEST=$match[1]

        # Install latest package version and commit changes
        npm i $PACKAGE@latest
        git add package*.json
        git commit -m "${TYPE}(${SCOPE}): update $PACKAGE from v$CURRENT to v$LATEST"
    done

    # Display git log for the number of updated packages
    git log -${#restArgs[@]}
}
